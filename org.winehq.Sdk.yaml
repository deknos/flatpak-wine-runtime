build-runtime: true
id: org.winehq.Sdk
id-platform: org.winehq.Platform
branch: master
runtime: org.freedesktop.Platform
runtime-version: '21.08'
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  # will likely need need a proper add extension entry
  #- org.freedesktop.Sdk.Compat.i386.Debug
  - org.freedesktop.Sdk.Debug
  - org.freedesktop.Sdk.Docs
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Locale
platform-extensions:
  - org.freedesktop.Platform.Locale
inherit-extensions:
  - org.freedesktop.Platform.GL
  - org.freedesktop.Platform.Timezones
  - org.freedesktop.Platform.GStreamer
  - org.freedesktop.Platform.Icontheme
  - org.freedesktop.Platform.VAAPI.Intel
  - org.freedesktop.Platform.openh264
  - org.freedesktop.Platform.VulkanLayer
  - org.gtk.Gtk3theme
inherit-sdk-extensions:
  - org.freedesktop.Sdk.Extension
add-extensions:
  org.winehq.Sdk.Docs:
    directory: share/runtime/docs
    bundle: true
    autodelete: true
    no-autodownload: true
# org.winehq.Platform.Compat.i386.Debug:
#   directory: lib/debug/lib/i386-linux-gnu
#   version: '21.08'
#   no-autodownload: true
  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: '1.4'
    versions: 21.08;1.4
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d;vulkan/implicit_layer.d
    download-if: active-gl-driver
    enable-if: active-gl-driver
  org.freedesktop.Platform.VAAPI.Intel.i386:
    directory: lib/i386-linux-gnu/dri/intel-vaapi-driver
    version: '21.08'
    versions: '21.08'
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    download-if: active-gl-driver
    enable-if: active-gl-driver
# org.freedesktop.Platform.ffmpeg-full:
#   directory: lib/ffmpeg
#   add-ld-path: .
#   version: '21.08'
#   no-autodownload: true
#   autodelete: false
# org.freedesktop.Platform.ffmpeg_full.i386:
#   directory: lib32/ffmpeg
#   add-ld-path: .
#   version: '21.08'
#   no-autodownload: true
#   autodelete: false
finish-args:
  - --allow=multiarch
  - --device=dri
  - --env=GI_TYPELIB_PATH=/app/lib/girepository-1.0
  - --env=GST_PLUGIN_PATH=/app/lib/gstreamer-1.0:/usr/lib/extensions/gstreamer-1.0:/usr/lib/x86_64-linux-gnu/gstreamer-1.0
  - --env=WINEARCH=win64
  - --env=XDG_DATA_DIRS=/app/share:/usr/share:/usr/share/runtime/share:/run/host/share
  - --persist=.wine
  - --share=ipc
  - --socket=pulseaudio
  - --socket=wayland
  - --socket=x11
  - --runtime=org.winehq.Platform//master
  - --sdk=org.winehq.Sdk//master
cleanup:
  - /man
  - /share/man
  - /lib/systemd
  - '*.la'
cleanup-commands:
  - /usr/libexec/freedesktop-post.sh
cleanup-platform:
  - /include
  - /lib/*/cmake
  - /lib/*/pkgconfig
  - /lib/mkspecs
  - /lib/pkgconfig
  - /mkspecs
  - /share/aclocal
  - /share/pkgconfig
  - /share/runtime/docs
  - '*.a'
  - '*.cmake'
  - '*.prl'
cleanup-platform-commands:
  - /usr/libexec/freedesktop-post.sh
prepare-platform-commands:
  # /app symlink conflicts with the pulled-in i386 libdir
  - rm /usr/lib/i386-linux-gnu
modules:
  - name: runtime-prepare
    buildsystem: simple
    build-commands:
      # workaround for including 32bit libs in the platform
      - |
        mv /usr/lib/i386-linux-gnu{,-1}
        ln -sr /usr/lib/i386-linux-gnu{-1,}
      # mount default 32bit extensions directly onto the runtime
      - |
        rm ${FLATPAK_DEST}/lib/i386-linux-gnu/GL
        install -dm755 ${FLATPAK_DEST}/lib/i386-linux-gnu/{GL,dri/intel-vaapi-driver}
      # ffmpeg can be used with wine-staging
      #- install -dm755 ${FLATPAK_DEST}/lib/{x86_64,i386}-linux-gnu/ffmpeg
      # add default 32bit locations to ld.so.conf (empty by default)
      - |
        install -Dm644 /dev/stdin ${FLATPAK_DEST}/etc/ld.so.conf <<EOF
        /app/lib32
        /app/lib/i386-linux-gnu
        /usr/lib/i386-linux-gnu
        EOF
  - name: install-i386-toolchain
    buildsystem: simple
    build-commands:
      - install -dm755 /usr/{lib/x86_64-linux-gnu/gcc,libexec/gcc}
      - |
        cd /usr/lib/sdk/toolchain-i386

        mv bin/i686-unknown-linux-gnu-* /usr/bin/ && rmdir bin
        mv i686-unknown-linux-gnu /usr/

        pushd lib/x86_64-linux-gnu
        mv gcc/i686-unknown-linux-gnu /usr/lib/x86_64-linux-gnu/gcc/ && rmdir gcc
        popd

        mv libexec/gcc/i686-unknown-linux-gnu /usr/libexec/gcc/ && rmdir libexec/{gcc,}
        mv share/man/man1/i686-unknown-linux-gnu-* /usr/share/man/man1/ && rmdir share/man/man1
        mv x86_64-unknown-linux-gnu/i686-unknown-linux-gnu /usr/x86_64-unknown-linux-gnu && rmdir x86_64-unknown-linux-gnu
    post-install:
      - |
        cd /usr/lib/sdk
        pushd toolchain-i386

        rm include/ctf*.h && rmdir include

        pushd lib/x86_64-linux-gnu
        rm bfd-plugins/libdep.* && rmdir bfd-plugins
        rm x86_64-linux-gnu/libcc1.* && rmdir x86_64-linux-gnu
        rm libctf*
        popd
        rmdir lib/{x86_64-linux-gnu,}

        pushd share
        rm -rf gcc-*/python/libstdcxx && rmdir gcc-*/{python,}
        rm -rf {info,man/man7} && rmdir man
        popd
        rmdir share

        rm .ref
        popd
        rmdir toolchain-i386
    cleanup-platform:
      - '*'
  - wine/wine.yaml
  # 7z can extract some self-extracted *.exe installers
  - p7zip/p7zip.json
  - dosbox-staging/dosbox-staging.json
  - dxvk/dxvk-bin.json
  - wine-gecko/wine-gecko.json
  - wine-mono/wine-mono.json
  - winetricks/winetricks.json
  - name: os-release
    post-install:
      - mkdir -p /usr/share/runtime/lib/plugins/
    sources:
      - type: file
        path: os-release
      - type: file
        path: issue
      - type: file
        path: issue.net
      - type: file
        path: org.winehq.Sdk.appdata.xml
      - type: file
        path: org.winehq.Platform.appdata.xml
      - type: file
        path: os-release-Makefile
        dest-filename: Makefile
      - type: script
        commands: []
        dest-filename: configure
